상속(Inheritance)

- is-a 관계가 성립하는 객체간의 관계
- 부모클래스 = 상위클래스 = 슈퍼클레스(Super class)
- 자식클래스 = 하위클래스 = 서브클래스(Sub class)

- 슈퍼클래스의 모든 멤버를 서브클래스에서 물려받아 선언없이 사용하는 것
  => 슈퍼클래스가 가진 멤버변수 및 메서드 등을 서브클래스에서 선언하지 않고도 사용 가능
- 단, 생성자 및 Private 접근제한자를 갖는 멤버는 상속 대상에서 제한됨.
- 서브클래스의 인스턴스를 생성하게 되면 내부적으로 슈퍼클래스의 인스턴스를 먼저 생성한 뒤
  서브클래스의 인스턴스가 생성됨
  => 서브클래스의 생성자 내에서 슈퍼클래스의 생성자가 가장 먼저 호출되어 인스턴스 생성 후
       서브클래스의 생성자 코드가 실행됨
- 그러나 슈퍼클래스의 인스턴스에서는 서브클래스의 멤버에 접근 불가

- 자바는 단일 상속만 가능(= 부모클래스가 하나만 가능)
- 별도로 상속 대상을 지정하지 않은 클래스는 java.lang.Object 클래스를 상속받는다.
  => 상속을 활용하면 코드의 재사용성이 향상됨(= 코드 중복 제거, 유지보수성 향상)

< 상속을 위한 서브클래스 정의 기본 문법 >
class 서브클래스명 extends 슈퍼클래스명 {}

=============================================================

다른 패키지의 클래스를 상속할 경우

- 부모클래스의 접근제한자에 따라 상속 여부 결정

- public : 외부(패키지, 클래스 상관없이)에서 누구나 접근 가능
- proteced : 같은 패키지이거나, 패키지가 달라도 상속관계인 서브클래스에서만 접근 가능
- default : 다른 패키지에서는 접근 불가 = 동일한 패키지에서만 접근 가능
  => 이 접근제한자는 다른 접근제한자를 사용하지 않을 경우 자동으로 부여됨
- private : 외부(다른 클래스, 다른 패키지)에서 접근 불가 = 자신의 클래스에서만 접근 가능

- import 실행시 외부 클래스의 멤버에 접근하기 위해서는 인스턴스 생성이 필수지만 자신의 슈퍼클래스 멤버에 
  접근하기 위해서는 인스턴스 생성없이 직접 접근해야 한다.
1. 인스턴스 생성을 통해 슈퍼클래스에 접근할 경우 상속관계가 아닌 포함(사용)관계로 
    취급됨 = 다른 패키지에 있는 일반 클래스로 취급됨.
접근 가능 : public
접근 불가능 : protected, default, private

2. 인스턴스 생성 없이 자신의 인스턴스를 통해 상속이 적용된 상태 그대로 접근할 경우
     슈퍼 클래스의 멤버에 직접 접근 가능
접근 가능 : public, protected
접근 불가능 : default, private

=======================================================================

다른 패키지의 클래스를 상속할 경우

- 부모클래스의 접근제한자에 따라 상속 여부 결정

- public : 외부(패키지, 클래스 상관없이)에서 누구나 접근 가능
- proteced : 같은 패키지이거나, 패키지가 달라도 상속관계인 서브클래스에서만 접근 가능
- default : 다른 패키지에서는 접근 불가 = 동일한 패키지에서만 접근 가능
  => 이 접근제한자는 다른 접근제한자를 사용하지 않을 경우 자동으로 부여됨
- private : 외부(다른 클래스, 다른 패키지)에서 접근 불가 = 자신의 클래스에서만 접근 가능

- import 실행시 외부 클래스의 멤버에 접근하기 위해서는 인스턴스 생성이 필수지만 자신의 슈퍼클래스 멤버에 
  접근하기 위해서는 인스턴스 생성없이 직접 접근해야 한다.
1. 인스턴스 생성을 통해 슈퍼클래스에 접근할 경우 상속관계가 아닌 포함(사용)관계로 
    취급됨 = 다른 패키지에 있는 일반 클래스로 취급됨.
접근 가능 : public
접근 불가능 : protected, default, private

2. 인스턴스 생성 없이 자신의 인스턴스를 통해 상속이 적용된 상태 그대로 접근할 경우
     슈퍼 클래스의 멤버에 직접 접근 가능
접근 가능 : public, protected
접근 불가능 : default, private

